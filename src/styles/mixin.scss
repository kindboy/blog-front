/// adds property prefix for css3 property
/// @param {*} $property Property
/// @param {*} $value Value
@mixin css3-prefix($property, $value...) {
    -webkit-#{$property}: #{$value};
     -khtml-#{$property}: #{$value};
       -moz-#{$property}: #{$value};
        -ms-#{$property}: #{$value};
         -o-#{$property}: #{$value};
            #{$property}: #{$value};
}

/// border radius
/// @param {Size} $radius [5px] Radius
/// @require {mixin} css3-prefix
@mixin border-radius($radius: 5px) {
    @include css3-prefix('border-radius', $radius);
}

/// border radius separate
/// @param {Size} $topLeftRadius [5px] topLeftRadius
/// @param {Size} $topRightRadius [5px] topRightRadius
/// @param {Size} $bottomLeftRadius [5px] bottomLeftRadius
/// @param {Size} $bottomRightRadius [5px] bottomRightRadius
/// @require {mixin} css3-prefix
@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
    @include css3-prefix('border-top-left-radius', $topLeftRadius);
    @include css3-prefix('border-top-right-radius', $topRightRadius);
    @include css3-prefix('border-bottom-left-radius', $bottomLeftRadius);
    @include css3-prefix('border-bottom-right-radius', $bottomRightRadius);
}

/// box shadow
/// @param {Size} $x [2px] x
/// @param {Size} $y [2px] y
/// @param {Size} $blur [5px] blur
/// @param {Color} $color [rgba(0, 0, 0, .4)] color
/// @param {Boolean} $inset [''] inset
/// @require {mixin} css3-prefix
@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4), $inset: '') {
    @if ($inset != '') {
        @include css3-prefix('box-shadow', $inset $x $y $blur $color);
    } @else {
        @include css3-prefix('box-shadow', $x $y $blur $color);
    }
}

/// box-sizing
/// @param {*} $type [border-box] type
/// @require {mixin} css3-prefix
@mixin box-sizing($type: border-box) {
    @include css3-prefix('box-sizing', $type);
}

/// opacity
/// @param {Double} $opacity [.5] opacity
/// @require {mixin} css3-prefix
@mixin opacity($opacity: .5) {
    $opacityMultiplied: ($opacity * 100);

    filter: alpha(opacity=$opacityMultiplied);
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
    @include css3-prefix('opacity', $opacity);
}

/// single line text ellipsis
@mixin text-overflow {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/// mulitple line text ellipsis
/// @param {number} $num Num
@mixin content-overflow($num) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $num;
    -webkit-box-orient: vertical;
}